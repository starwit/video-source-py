# The id is used as part of stream identifier in Redis
id: video1
uri: /path/that/opencv/understands
# This sets a lower bound on frame times (i.e. frames are skipped), 0 means no limit
max_fps: 0
# Encode the video frame data as JPEG (using libturbojpeg)
jpeg_encode: True
# JPEG quality 0 - 100 (100 is lossless and big); Reasonable starting points: 2160 = 80, 1080 = 90, <720 = 95
jpeg_quality: 80
# If > 0, scale the image to the given width (preserving aspect ratio)
scale_width: 0
# Path to a b/w mask (ideally same resolution as frame after scaling down), black=blacken, white=keep
mask_path: null
# How long to wait in seconds in case the connection is lost before the next retry
reconnect_backoff_time: 1

# if not configured, frames will have no cameraLocation set (i.e. feature disabled)
camera_position_source:
  # where to read position data
  stream_id: "positionsource:self"
  # max absolute offset in ms between frame time and position update time
  max_position_skew: 1000
  # if true, frames will be discarded if there is no position or position is stale (according to skew)
  drop_frames_if_no_position: False

log_level: DEBUG
redis:
  host: redis
  port: 6379

prometheus_port: 8000